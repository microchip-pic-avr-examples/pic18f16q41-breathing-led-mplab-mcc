

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Apr 12 15:44:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F16Q41
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29  0000                     
    30                           ; Version 2.30
    31                           ; Generated 20/08/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F16Q41 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66 ;; Function _PWM2_16BIT_Slice1Output1_DefaultInterruptHandler is unused but had its address taken
    67  0000                     
    68 ;; Function _PWM2_16BIT_Slice1Output2_DefaultInterruptHandler is unused but had its address taken
    69  0000                     
    70 ;; Function _PWM2_16BIT_Period_DefaultInterruptHandler is unused but had its address taken
    71  0000                     
    72 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
    73  0000                     
    74 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
    75  0000                     
    76 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
    77  0000                     
    78 ;; Function _PWM1_16BIT_Slice1Output1_DefaultInterruptHandler is unused but had its address taken
    79  0000                     
    80 ;; Function _PWM1_16BIT_Slice1Output2_DefaultInterruptHandler is unused but had its address taken
    81  0000                     
    82 ;; Function _PWM1_16BIT_Period_DefaultInterruptHandler is unused but had its address taken
    83  0000                     
    84                           	psect	nvCOMRAM
    85  000501                     __pnvCOMRAM:
    86                           	callstack 0
    87  000501                     _PWM1_16BIT_Period_InterruptHandler:
    88                           	callstack 0
    89  000501                     	ds	2
    90  000503                     _PWM1_16BIT_Slice1Output2_InterruptHandler:
    91                           	callstack 0
    92  000503                     	ds	2
    93  000505                     _PWM1_16BIT_Slice1Output1_InterruptHandler:
    94                           	callstack 0
    95  000505                     	ds	2
    96  000507                     _INT2_InterruptHandler:
    97                           	callstack 0
    98  000507                     	ds	2
    99  000509                     _INT1_InterruptHandler:
   100                           	callstack 0
   101  000509                     	ds	2
   102  00050B                     _INT0_InterruptHandler:
   103                           	callstack 0
   104  00050B                     	ds	2
   105  00050D                     _PWM2_16BIT_Period_InterruptHandler:
   106                           	callstack 0
   107  00050D                     	ds	2
   108  00050F                     _PWM2_16BIT_Slice1Output2_InterruptHandler:
   109                           	callstack 0
   110  00050F                     	ds	2
   111  000511                     _PWM2_16BIT_Slice1Output1_InterruptHandler:
   112                           	callstack 0
   113  000511                     	ds	2
   114  0000                     _ACTCON	set	172
   115  0000                     _OSCTUNE	set	176
   116  0000                     _OSCSTAT	set	178
   117  0000                     _OSCFRQ	set	177
   118  0000                     _OSCEN	set	179
   119  0000                     _OSCCON3	set	175
   120  0000                     _OSCCON2	set	174
   121  0000                     _OSCCON1	set	173
   122  0000                     _CLCDATAbits	set	212
   123  0000                     _CLCnCON	set	214
   124  0000                     _CLCDATA	set	212
   125  0000                     _CLCnGLS3	set	223
   126  0000                     _CLCnGLS2	set	222
   127  0000                     _CLCnGLS1	set	221
   128  0000                     _CLCnGLS0	set	220
   129  0000                     _CLCnSEL3	set	219
   130  0000                     _CLCnSEL2	set	218
   131  0000                     _CLCnSEL1	set	217
   132  0000                     _CLCnSEL0	set	216
   133  0000                     _CLCnPOL	set	215
   134  0000                     _CLCSELECT	set	213
   135  0000                     _RC1PPS	set	530
   136  0000                     _PWM1ERSPPS	set	593
   137  0000                     _PWMIN1PPS	set	600
   138  0000                     _PWMIN0PPS	set	599
   139  0000                     _CLCIN0PPS	set	609
   140  0000                     _PWM2ERSPPS	set	594
   141  0000                     _IOCCF	set	1047
   142  0000                     _IOCCN	set	1046
   143  0000                     _IOCCP	set	1045
   144  0000                     _IOCBF	set	1039
   145  0000                     _IOCBN	set	1038
   146  0000                     _IOCBP	set	1037
   147  0000                     _IOCAF	set	1031
   148  0000                     _IOCAN	set	1030
   149  0000                     _IOCAP	set	1029
   150  0000                     _INLVLC	set	1044
   151  0000                     _INLVLB	set	1036
   152  0000                     _INLVLA	set	1028
   153  0000                     _SLRCONC	set	1043
   154  0000                     _SLRCONB	set	1035
   155  0000                     _SLRCONA	set	1027
   156  0000                     _ODCONC	set	1042
   157  0000                     _ODCONB	set	1034
   158  0000                     _ODCONA	set	1026
   159  0000                     _WPUC	set	1041
   160  0000                     _WPUB	set	1033
   161  0000                     _WPUA	set	1025
   162  0000                     _ANSELC	set	1040
   163  0000                     _ANSELB	set	1032
   164  0000                     _ANSELA	set	1024
   165  0000                     _PWM1GIEbits	set	1128
   166  0000                     _PWM1CONbits	set	1129
   167  0000                     _PWM1CON	set	1129
   168  0000                     _PIE4bits	set	1196
   169  0000                     _PWM1GIRbits	set	1127
   170  0000                     _PIR4bits	set	1207
   171  0000                     _PWM1S1P2H	set	1134
   172  0000                     _PWM1S1P2L	set	1133
   173  0000                     _PWM1S1P1H	set	1132
   174  0000                     _PWM1S1P1L	set	1131
   175  0000                     _PWM1S1CFG	set	1130
   176  0000                     _PWM1GIE	set	1128
   177  0000                     _PWM1GIR	set	1127
   178  0000                     _PWM1PIPOS	set	1126
   179  0000                     _PWM1CPRE	set	1125
   180  0000                     _PWM1PRH	set	1124
   181  0000                     _PWM1PRL	set	1123
   182  0000                     _PWM1LDS	set	1122
   183  0000                     _PWM1CLK	set	1121
   184  0000                     _PWM1ERS	set	1120
   185  0000                     _PIR10bits	set	1213
   186  0000                     _PIR6bits	set	1209
   187  0000                     _PIR1bits	set	1204
   188  0000                     _INTCON0bits	set	1238
   189  0000                     _PWM2GIEbits	set	1143
   190  0000                     _PWM2CONbits	set	1144
   191  0000                     _PWM2CON	set	1144
   192  0000                     _PIE5bits	set	1197
   193  0000                     _PWM2GIRbits	set	1142
   194  0000                     _PIR5bits	set	1208
   195  0000                     _PWM2S1P2H	set	1149
   196  0000                     _PWM2S1P2L	set	1148
   197  0000                     _PWM2S1P1H	set	1147
   198  0000                     _PWM2S1P1L	set	1146
   199  0000                     _PWM2S1CFG	set	1145
   200  0000                     _PWM2GIE	set	1143
   201  0000                     _PWM2GIR	set	1142
   202  0000                     _PWM2PIPOS	set	1141
   203  0000                     _PWM2CPRE	set	1140
   204  0000                     _PWM2PRH	set	1139
   205  0000                     _PWM2PRL	set	1138
   206  0000                     _PWM2LDS	set	1137
   207  0000                     _PWM2CLK	set	1136
   208  0000                     _PWM2ERS	set	1135
   209  0000                     _TRISC	set	1224
   210  0000                     _TRISB	set	1223
   211  0000                     _TRISA	set	1222
   212  0000                     _LATC	set	1216
   213  0000                     _LATB	set	1215
   214  0000                     _LATA	set	1214
   215                           
   216                           ; #config settings
   217                           
   218                           	psect	cinit
   219  00FDD0                     __pcinit:
   220                           	callstack 0
   221  00FDD0                     start_initialization:
   222                           	callstack 0
   223  00FDD0                     __initialization:
   224                           	callstack 0
   225  00FDD0                     end_of_initialization:
   226                           	callstack 0
   227  00FDD0                     __end_of__initialization:
   228                           	callstack 0
   229  00FDD0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   230  00FDD2  6EF8               	movwf	tblptru,c
   231  00FDD4  0100               	movlb	0
   232  00FDD6  EFED  F07E         	goto	_main	;jump to C main() function
   233                           
   234                           	psect	cstackCOMRAM
   235  000513                     __pcstackCOMRAM:
   236                           	callstack 0
   237  000513                     PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler:
   238                           	callstack 0
   239  000513                     PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler:
   240                           	callstack 0
   241  000513                     PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler:
   242                           	callstack 0
   243  000513                     INT0_SetInterruptHandler@InterruptHandler:
   244                           	callstack 0
   245  000513                     INT1_SetInterruptHandler@InterruptHandler:
   246                           	callstack 0
   247  000513                     INT2_SetInterruptHandler@InterruptHandler:
   248                           	callstack 0
   249  000513                     PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler:
   250                           	callstack 0
   251  000513                     PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler:
   252                           	callstack 0
   253  000513                     PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x0
   257  000513                     	ds	2
   258  000515                     
   259                           ; 1 bytes @ 0x2
   260 ;;
   261 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   262 ;;
   263 ;; *************** function _main *****************
   264 ;; Defined at:
   265 ;;		line 40 in file "main.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;		None
   270 ;; Return value:  Size  Location     Type
   271 ;;                  2  442[None  ] int 
   272 ;; Registers used:
   273 ;;		wreg, status,2, status,0, cstack
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   283 ;;Total ram usage:        0 bytes
   284 ;; Hardware stack levels required when called:    3
   285 ;; This function calls:
   286 ;;		_SYSTEM_Initialize
   287 ;; This function is called by:
   288 ;;		Startup code after reset
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           	psect	text0
   293  00FDDA                     __ptext0:
   294                           	callstack 0
   295  00FDDA                     _main:
   296                           	callstack 125
   297  00FDDA                     
   298                           ;main.c: 42:     SYSTEM_Initialize();
   299  00FDDA  ECF3  F07E         	call	_SYSTEM_Initialize	;wreg free
   300  00FDDE                     l443:
   301  00FDDE  EFEF  F07E         	goto	l443
   302  00FDE2  EFFE  F07F         	goto	start
   303  00FDE6                     __end_of_main:
   304                           	callstack 0
   305                           
   306 ;; *************** function _SYSTEM_Initialize *****************
   307 ;; Defined at:
   308 ;;		line 62 in file "mcc_generated_files/system/src/system.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, status,2, status,0, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels used:    1
   328 ;; Hardware stack levels required when called:    2
   329 ;; This function calls:
   330 ;;		_CLC1_Initialize
   331 ;;		_CLOCK_Initialize
   332 ;;		_INTERRUPT_Initialize
   333 ;;		_PIN_MANAGER_Initialize
   334 ;;		_PWM1_16BIT_Initialize
   335 ;;		_PWM2_16BIT_Initialize
   336 ;; This function is called by:
   337 ;;		_main
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text1
   342  00FDE6                     __ptext1:
   343                           	callstack 0
   344  00FDE6                     _SYSTEM_Initialize:
   345                           	callstack 125
   346  00FDE6                     
   347                           ;mcc_generated_files/system/src/system.c: 64:     CLOCK_Initialize();
   348  00FDE6  EC00  F07F         	call	_CLOCK_Initialize	;wreg free
   349  00FDEA                     
   350                           ;mcc_generated_files/system/src/system.c: 65:     INTERRUPT_Initialize();
   351  00FDEA  EC2C  F07F         	call	_INTERRUPT_Initialize	;wreg free
   352  00FDEE                     
   353                           ;mcc_generated_files/system/src/system.c: 66:     PWM1_16BIT_Initialize();
   354  00FDEE  EC46  F07F         	call	_PWM1_16BIT_Initialize	;wreg free
   355                           
   356                           ;mcc_generated_files/system/src/system.c: 67:     CLC1_Initialize();
   357  00FDF2  EC12  F07F         	call	_CLC1_Initialize	;wreg free
   358  00FDF6                     
   359                           ;mcc_generated_files/system/src/system.c: 68:     PWM2_16BIT_Initialize();
   360  00FDF6  EC7D  F07F         	call	_PWM2_16BIT_Initialize	;wreg free
   361  00FDFA                     
   362                           ;mcc_generated_files/system/src/system.c: 69:     PIN_MANAGER_Initialize();
   363  00FDFA  ECB4  F07F         	call	_PIN_MANAGER_Initialize	;wreg free
   364  00FDFE  0012               	return		;funcret
   365  00FE00                     __end_of_SYSTEM_Initialize:
   366                           	callstack 0
   367                           
   368 ;; *************** function _PWM2_16BIT_Initialize *****************
   369 ;; Defined at:
   370 ;;		line 72 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, status,2, status,0, cstack
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   388 ;;Total ram usage:        0 bytes
   389 ;; Hardware stack levels used:    1
   390 ;; Hardware stack levels required when called:    1
   391 ;; This function calls:
   392 ;;		_PWM2_16BIT_Period_SetInterruptHandler
   393 ;;		_PWM2_16BIT_Slice1Output1_SetInterruptHandler
   394 ;;		_PWM2_16BIT_Slice1Output2_SetInterruptHandler
   395 ;; This function is called by:
   396 ;;		_SYSTEM_Initialize
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	text2
   401  00FEFA                     __ptext2:
   402                           	callstack 0
   403  00FEFA                     _PWM2_16BIT_Initialize:
   404                           	callstack 125
   405  00FEFA                     
   406                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 74:      PWM2ERS = 0x0;
   407  00FEFA  0E00               	movlw	0
   408  00FEFC  6E6F               	movwf	111,c	;volatile
   409                           
   410                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 76:      PWM2CLK = 0x4;
   411  00FEFE  0E04               	movlw	4
   412  00FF00  6E70               	movwf	112,c	;volatile
   413                           
   414                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 78:      PWM2LDS = 0x0;
   415  00FF02  0E00               	movlw	0
   416  00FF04  6E71               	movwf	113,c	;volatile
   417                           
   418                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 80:      PWM2PRL = 0x47;
   419  00FF06  0E47               	movlw	71
   420  00FF08  6E72               	movwf	114,c	;volatile
   421                           
   422                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 82:      PWM2PRH = 0x1;
   423  00FF0A  0E01               	movlw	1
   424  00FF0C  6E73               	movwf	115,c	;volatile
   425                           
   426                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 84:      PWM2CPRE = 0x0;
   427  00FF0E  0E00               	movlw	0
   428  00FF10  6E74               	movwf	116,c	;volatile
   429                           
   430                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 86:      PWM2PIPOS = 0x0;
   431  00FF12  0E00               	movlw	0
   432  00FF14  6E75               	movwf	117,c	;volatile
   433                           
   434                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 88:      PWM2GIR = 0x0;
   435  00FF16  0E00               	movlw	0
   436  00FF18  6E76               	movwf	118,c	;volatile
   437                           
   438                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 90:      PWM2GIE = 0x0;
   439  00FF1A  0E00               	movlw	0
   440  00FF1C  6E77               	movwf	119,c	;volatile
   441                           
   442                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 92:      PWM2S1CFG = 0x0;
   443  00FF1E  0E00               	movlw	0
   444  00FF20  6E79               	movwf	121,c	;volatile
   445                           
   446                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 94:      PWM2S1P1L = 0xA4;
   447  00FF22  0EA4               	movlw	164
   448  00FF24  6E7A               	movwf	122,c	;volatile
   449                           
   450                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 96:      PWM2S1P1H = 0x0;
   451  00FF26  0E00               	movlw	0
   452  00FF28  6E7B               	movwf	123,c	;volatile
   453                           
   454                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 98:      PWM2S1P2L = 0xA4;
   455  00FF2A  0EA4               	movlw	164
   456  00FF2C  6E7C               	movwf	124,c	;volatile
   457                           
   458                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 100:      PWM2S1P2H = 0x0;
   459  00FF2E  0E00               	movlw	0
   460  00FF30  6E7D               	movwf	125,c	;volatile
   461  00FF32                     
   462                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 103:     PIR5bits.PWM2PIF = 0;
   463  00FF32  9CB8               	bcf	184,6,c	;volatile
   464  00FF34                     
   465                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 106:     PIR5bits.PWM2IF = 0;
   466  00FF34  9EB8               	bcf	184,7,c	;volatile
   467  00FF36                     
   468                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 109:     PWM2GIRbits.S1P1IF = 0;
   469  00FF36  9076               	bcf	118,0,c	;volatile
   470  00FF38                     
   471                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 112:     PWM2GIRbits.S1P2IF = 0;
   472  00FF38  9276               	bcf	118,1,c	;volatile
   473  00FF3A                     
   474                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 115:     PIE5bits.PWM2IE = 0;
   475  00FF3A  9EAD               	bcf	173,7,c	;volatile
   476  00FF3C                     
   477                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 118:     PIE5bits.PWM2PIE = 0;
   478  00FF3C  9CAD               	bcf	173,6,c	;volatile
   479  00FF3E                     
   480                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 121:     PWM2_16BIT_Slice1Output1_SetInterrup
      +                          tHandler(PWM2_16BIT_Slice1Output1_DefaultInterruptHandler);
   481  00FF3E  0E00               	movlw	0
   482  00FF40  6E13               	movwf	PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler^(0+1280),c
   483  00FF42  0E00               	movlw	0
   484  00FF44  6E14               	movwf	(PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   485  00FF46  ECDE  F07E         	call	_PWM2_16BIT_Slice1Output1_SetInterruptHandler	;wreg free
   486  00FF4A                     
   487                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 122:     PWM2_16BIT_Slice1Output2_SetInterrup
      +                          tHandler(PWM2_16BIT_Slice1Output2_DefaultInterruptHandler);
   488  00FF4A  0E00               	movlw	0
   489  00FF4C  6E13               	movwf	PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler^(0+1280),c
   490  00FF4E  0E00               	movlw	0
   491  00FF50  6E14               	movwf	(PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   492  00FF52  ECE3  F07E         	call	_PWM2_16BIT_Slice1Output2_SetInterruptHandler	;wreg free
   493  00FF56                     
   494                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 123:     PWM2_16BIT_Period_SetInterruptHandle
      +                          r(PWM2_16BIT_Period_DefaultInterruptHandler);
   495  00FF56  0E00               	movlw	0
   496  00FF58  6E13               	movwf	PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler^(0+1280),c
   497  00FF5A  0E00               	movlw	0
   498  00FF5C  6E14               	movwf	(PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   499  00FF5E  ECD9  F07E         	call	_PWM2_16BIT_Period_SetInterruptHandler	;wreg free
   500  00FF62                     
   501                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 125:      PWM2CON = 0x80;
   502  00FF62  0E80               	movlw	128
   503  00FF64  6E78               	movwf	120,c	;volatile
   504  00FF66  0012               	return		;funcret
   505  00FF68                     __end_of_PWM2_16BIT_Initialize:
   506                           	callstack 0
   507                           
   508 ;; *************** function _PWM2_16BIT_Slice1Output2_SetInterruptHandler *****************
   509 ;; Defined at:
   510 ;;		line 191 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   513 ;;		 -> PWM2_16BIT_Slice1Output2_DefaultInterruptHandler(1), 
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, status,2, status,0
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   529 ;;Total ram usage:        2 bytes
   530 ;; Hardware stack levels used:    1
   531 ;; This function calls:
   532 ;;		Nothing
   533 ;; This function is called by:
   534 ;;		_PWM2_16BIT_Initialize
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text3
   539  00FDC6                     __ptext3:
   540                           	callstack 0
   541  00FDC6                     _PWM2_16BIT_Slice1Output2_SetInterruptHandler:
   542                           	callstack 125
   543  00FDC6                     
   544                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 191: void PWM2_16BIT_Slice1Output2_SetInterru
      +                          ptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm2_16bit.c: 192
      +                          : {;mcc_generated_files/pwm/src/pwm2_16bit.c: 193:     PWM2_16BIT_Slice1Output2_Interrup
      +                          tHandler = InterruptHandler;
   545  00FDC6  C513  F50F         	movff	PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler,_PWM2_16BIT_Slice1O
      +                          utput2_InterruptHandler
   546  00FDCA  C514  F510         	movff	PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1,_PWM2_16BIT_Slice
      +                          1Output2_InterruptHandler+1
   547  00FDCE  0012               	return		;funcret
   548  00FDD0                     __end_of_PWM2_16BIT_Slice1Output2_SetInterruptHandler:
   549                           	callstack 0
   550                           
   551 ;; *************** function _PWM2_16BIT_Slice1Output1_SetInterruptHandler *****************
   552 ;; Defined at:
   553 ;;		line 186 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   556 ;;		 -> PWM2_16BIT_Slice1Output1_DefaultInterruptHandler(1), 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   572 ;;Total ram usage:        2 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_PWM2_16BIT_Initialize
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text4
   582  00FDBC                     __ptext4:
   583                           	callstack 0
   584  00FDBC                     _PWM2_16BIT_Slice1Output1_SetInterruptHandler:
   585                           	callstack 125
   586  00FDBC                     
   587                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 186: void PWM2_16BIT_Slice1Output1_SetInterru
      +                          ptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm2_16bit.c: 187
      +                          : {;mcc_generated_files/pwm/src/pwm2_16bit.c: 188:     PWM2_16BIT_Slice1Output1_Interrup
      +                          tHandler = InterruptHandler;
   588  00FDBC  C513  F511         	movff	PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler,_PWM2_16BIT_Slice1O
      +                          utput1_InterruptHandler
   589  00FDC0  C514  F512         	movff	PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1,_PWM2_16BIT_Slice
      +                          1Output1_InterruptHandler+1
   590  00FDC4  0012               	return		;funcret
   591  00FDC6                     __end_of_PWM2_16BIT_Slice1Output1_SetInterruptHandler:
   592                           	callstack 0
   593                           
   594 ;; *************** function _PWM2_16BIT_Period_SetInterruptHandler *****************
   595 ;; Defined at:
   596 ;;		line 196 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   599 ;;		 -> PWM2_16BIT_Period_DefaultInterruptHandler(1), 
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2, status,0
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   615 ;;Total ram usage:        2 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; This function calls:
   618 ;;		Nothing
   619 ;; This function is called by:
   620 ;;		_PWM2_16BIT_Initialize
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text5
   625  00FDB2                     __ptext5:
   626                           	callstack 0
   627  00FDB2                     _PWM2_16BIT_Period_SetInterruptHandler:
   628                           	callstack 125
   629  00FDB2                     
   630                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 196: void PWM2_16BIT_Period_SetInterruptHandl
      +                          er(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm2_16bit.c: 197: {;mcc
      +                          _generated_files/pwm/src/pwm2_16bit.c: 198:     PWM2_16BIT_Period_InterruptHandler = Int
      +                          erruptHandler;
   631  00FDB2  C513  F50D         	movff	PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler,_PWM2_16BIT_Period_Interru
      +                          ptHandler
   632  00FDB6  C514  F50E         	movff	PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler+1,_PWM2_16BIT_Period_Inter
      +                          ruptHandler+1
   633  00FDBA  0012               	return		;funcret
   634  00FDBC                     __end_of_PWM2_16BIT_Period_SetInterruptHandler:
   635                           	callstack 0
   636                           
   637 ;; *************** function _PWM1_16BIT_Initialize *****************
   638 ;; Defined at:
   639 ;;		line 72 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    1
   660 ;; This function calls:
   661 ;;		_PWM1_16BIT_Period_SetInterruptHandler
   662 ;;		_PWM1_16BIT_Slice1Output1_SetInterruptHandler
   663 ;;		_PWM1_16BIT_Slice1Output2_SetInterruptHandler
   664 ;; This function is called by:
   665 ;;		_SYSTEM_Initialize
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text6
   670  00FE8C                     __ptext6:
   671                           	callstack 0
   672  00FE8C                     _PWM1_16BIT_Initialize:
   673                           	callstack 125
   674  00FE8C                     
   675                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 74:      PWM1ERS = 0x0;
   676  00FE8C  0E00               	movlw	0
   677  00FE8E  6E60               	movwf	96,c	;volatile
   678                           
   679                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 76:      PWM1CLK = 0x4;
   680  00FE90  0E04               	movlw	4
   681  00FE92  6E61               	movwf	97,c	;volatile
   682                           
   683                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 78:      PWM1LDS = 0x0;
   684  00FE94  0E00               	movlw	0
   685  00FE96  6E62               	movwf	98,c	;volatile
   686                           
   687                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 80:      PWM1PRL = 0x45;
   688  00FE98  0E45               	movlw	69
   689  00FE9A  6E63               	movwf	99,c	;volatile
   690                           
   691                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 82:      PWM1PRH = 0x1;
   692  00FE9C  0E01               	movlw	1
   693  00FE9E  6E64               	movwf	100,c	;volatile
   694                           
   695                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 84:      PWM1CPRE = 0x0;
   696  00FEA0  0E00               	movlw	0
   697  00FEA2  6E65               	movwf	101,c	;volatile
   698                           
   699                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 86:      PWM1PIPOS = 0x0;
   700  00FEA4  0E00               	movlw	0
   701  00FEA6  6E66               	movwf	102,c	;volatile
   702                           
   703                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 88:      PWM1GIR = 0x0;
   704  00FEA8  0E00               	movlw	0
   705  00FEAA  6E67               	movwf	103,c	;volatile
   706                           
   707                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 90:      PWM1GIE = 0x0;
   708  00FEAC  0E00               	movlw	0
   709  00FEAE  6E68               	movwf	104,c	;volatile
   710                           
   711                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 92:      PWM1S1CFG = 0x0;
   712  00FEB0  0E00               	movlw	0
   713  00FEB2  6E6A               	movwf	106,c	;volatile
   714                           
   715                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 94:      PWM1S1P1L = 0xA3;
   716  00FEB4  0EA3               	movlw	163
   717  00FEB6  6E6B               	movwf	107,c	;volatile
   718                           
   719                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 96:      PWM1S1P1H = 0x0;
   720  00FEB8  0E00               	movlw	0
   721  00FEBA  6E6C               	movwf	108,c	;volatile
   722                           
   723                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 98:      PWM1S1P2L = 0xA3;
   724  00FEBC  0EA3               	movlw	163
   725  00FEBE  6E6D               	movwf	109,c	;volatile
   726                           
   727                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 100:      PWM1S1P2H = 0x0;
   728  00FEC0  0E00               	movlw	0
   729  00FEC2  6E6E               	movwf	110,c	;volatile
   730  00FEC4                     
   731                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 103:     PIR4bits.PWM1PIF = 0;
   732  00FEC4  9CB7               	bcf	183,6,c	;volatile
   733  00FEC6                     
   734                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 106:     PIR4bits.PWM1IF = 0;
   735  00FEC6  9EB7               	bcf	183,7,c	;volatile
   736  00FEC8                     
   737                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 109:     PWM1GIRbits.S1P1IF = 0;
   738  00FEC8  9067               	bcf	103,0,c	;volatile
   739  00FECA                     
   740                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 112:     PWM1GIRbits.S1P2IF = 0;
   741  00FECA  9267               	bcf	103,1,c	;volatile
   742  00FECC                     
   743                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 115:     PIE4bits.PWM1IE = 0;
   744  00FECC  9EAC               	bcf	172,7,c	;volatile
   745  00FECE                     
   746                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 118:     PIE4bits.PWM1PIE = 0;
   747  00FECE  9CAC               	bcf	172,6,c	;volatile
   748  00FED0                     
   749                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 121:     PWM1_16BIT_Slice1Output1_SetInterrup
      +                          tHandler(PWM1_16BIT_Slice1Output1_DefaultInterruptHandler);
   750  00FED0  0E00               	movlw	0
   751  00FED2  6E13               	movwf	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler^(0+1280),c
   752  00FED4  0E00               	movlw	0
   753  00FED6  6E14               	movwf	(PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   754  00FED8  ECCF  F07E         	call	_PWM1_16BIT_Slice1Output1_SetInterruptHandler	;wreg free
   755  00FEDC                     
   756                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 122:     PWM1_16BIT_Slice1Output2_SetInterrup
      +                          tHandler(PWM1_16BIT_Slice1Output2_DefaultInterruptHandler);
   757  00FEDC  0E00               	movlw	0
   758  00FEDE  6E13               	movwf	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler^(0+1280),c
   759  00FEE0  0E00               	movlw	0
   760  00FEE2  6E14               	movwf	(PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   761  00FEE4  ECD4  F07E         	call	_PWM1_16BIT_Slice1Output2_SetInterruptHandler	;wreg free
   762  00FEE8                     
   763                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 123:     PWM1_16BIT_Period_SetInterruptHandle
      +                          r(PWM1_16BIT_Period_DefaultInterruptHandler);
   764  00FEE8  0E00               	movlw	0
   765  00FEEA  6E13               	movwf	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler^(0+1280),c
   766  00FEEC  0E00               	movlw	0
   767  00FEEE  6E14               	movwf	(PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   768  00FEF0  ECCA  F07E         	call	_PWM1_16BIT_Period_SetInterruptHandler	;wreg free
   769  00FEF4                     
   770                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 125:      PWM1CON = 0x80;
   771  00FEF4  0E80               	movlw	128
   772  00FEF6  6E69               	movwf	105,c	;volatile
   773  00FEF8  0012               	return		;funcret
   774  00FEFA                     __end_of_PWM1_16BIT_Initialize:
   775                           	callstack 0
   776                           
   777 ;; *************** function _PWM1_16BIT_Slice1Output2_SetInterruptHandler *****************
   778 ;; Defined at:
   779 ;;		line 191 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   782 ;;		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(1), 
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, status,2, status,0
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   797 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   798 ;;Total ram usage:        2 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; This function calls:
   801 ;;		Nothing
   802 ;; This function is called by:
   803 ;;		_PWM1_16BIT_Initialize
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text7
   808  00FDA8                     __ptext7:
   809                           	callstack 0
   810  00FDA8                     _PWM1_16BIT_Slice1Output2_SetInterruptHandler:
   811                           	callstack 125
   812  00FDA8                     
   813                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 191: void PWM1_16BIT_Slice1Output2_SetInterru
      +                          ptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm1_16bit.c: 192
      +                          : {;mcc_generated_files/pwm/src/pwm1_16bit.c: 193:     PWM1_16BIT_Slice1Output2_Interrup
      +                          tHandler = InterruptHandler;
   814  00FDA8  C513  F503         	movff	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Slice1O
      +                          utput2_InterruptHandler
   815  00FDAC  C514  F504         	movff	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Slice
      +                          1Output2_InterruptHandler+1
   816  00FDB0  0012               	return		;funcret
   817  00FDB2                     __end_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler:
   818                           	callstack 0
   819                           
   820 ;; *************** function _PWM1_16BIT_Slice1Output1_SetInterruptHandler *****************
   821 ;; Defined at:
   822 ;;		line 186 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   825 ;;		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(1), 
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, status,2, status,0
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   841 ;;Total ram usage:        2 bytes
   842 ;; Hardware stack levels used:    1
   843 ;; This function calls:
   844 ;;		Nothing
   845 ;; This function is called by:
   846 ;;		_PWM1_16BIT_Initialize
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text8
   851  00FD9E                     __ptext8:
   852                           	callstack 0
   853  00FD9E                     _PWM1_16BIT_Slice1Output1_SetInterruptHandler:
   854                           	callstack 125
   855  00FD9E                     
   856                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 186: void PWM1_16BIT_Slice1Output1_SetInterru
      +                          ptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm1_16bit.c: 187
      +                          : {;mcc_generated_files/pwm/src/pwm1_16bit.c: 188:     PWM1_16BIT_Slice1Output1_Interrup
      +                          tHandler = InterruptHandler;
   857  00FD9E  C513  F505         	movff	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Slice1O
      +                          utput1_InterruptHandler
   858  00FDA2  C514  F506         	movff	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Slice
      +                          1Output1_InterruptHandler+1
   859  00FDA6  0012               	return		;funcret
   860  00FDA8                     __end_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler:
   861                           	callstack 0
   862                           
   863 ;; *************** function _PWM1_16BIT_Period_SetInterruptHandler *****************
   864 ;; Defined at:
   865 ;;		line 196 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   868 ;;		 -> PWM1_16BIT_Period_DefaultInterruptHandler(1), 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   884 ;;Total ram usage:        2 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_PWM1_16BIT_Initialize
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text9
   894  00FD94                     __ptext9:
   895                           	callstack 0
   896  00FD94                     _PWM1_16BIT_Period_SetInterruptHandler:
   897                           	callstack 125
   898  00FD94                     
   899                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 196: void PWM1_16BIT_Period_SetInterruptHandl
      +                          er(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm1_16bit.c: 197: {;mcc
      +                          _generated_files/pwm/src/pwm1_16bit.c: 198:     PWM1_16BIT_Period_InterruptHandler = Int
      +                          erruptHandler;
   900  00FD94  C513  F501         	movff	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Period_Interru
      +                          ptHandler
   901  00FD98  C514  F502         	movff	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Period_Inter
      +                          ruptHandler+1
   902  00FD9C  0012               	return		;funcret
   903  00FD9E                     __end_of_PWM1_16BIT_Period_SetInterruptHandler:
   904                           	callstack 0
   905                           
   906 ;; *************** function _PIN_MANAGER_Initialize *****************
   907 ;; Defined at:
   908 ;;		line 47 in file "mcc_generated_files/system/src/pins.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, status,2
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
   922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   926 ;;Total ram usage:        0 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; This function calls:
   929 ;;		Nothing
   930 ;; This function is called by:
   931 ;;		_SYSTEM_Initialize
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text10
   936  00FF68                     __ptext10:
   937                           	callstack 0
   938  00FF68                     _PIN_MANAGER_Initialize:
   939                           	callstack 126
   940  00FF68                     
   941                           ;mcc_generated_files/system/src/pins.c: 52:     LATA = 0x0;
   942  00FF68  0E00               	movlw	0
   943  00FF6A  6EBE               	movwf	190,c	;volatile
   944                           
   945                           ;mcc_generated_files/system/src/pins.c: 53:     LATB = 0x0;
   946  00FF6C  0E00               	movlw	0
   947  00FF6E  6EBF               	movwf	191,c	;volatile
   948                           
   949                           ;mcc_generated_files/system/src/pins.c: 54:     LATC = 0x0;
   950  00FF70  0E00               	movlw	0
   951  00FF72  6EC0               	movwf	192,c	;volatile
   952                           
   953                           ;mcc_generated_files/system/src/pins.c: 59:     TRISA = 0x3F;
   954  00FF74  0E3F               	movlw	63
   955  00FF76  6EC6               	movwf	198,c	;volatile
   956                           
   957                           ;mcc_generated_files/system/src/pins.c: 60:     TRISB = 0xF0;
   958  00FF78  0EF0               	movlw	240
   959  00FF7A  6EC7               	movwf	199,c	;volatile
   960                           
   961                           ;mcc_generated_files/system/src/pins.c: 61:     TRISC = 0xFD;
   962  00FF7C  0EFD               	movlw	253
   963  00FF7E  6EC8               	movwf	200,c	;volatile
   964                           
   965                           ;mcc_generated_files/system/src/pins.c: 66:     ANSELA = 0x0;
   966  00FF80  0E00               	movlw	0
   967  00FF82  0104               	movlb	4	; () banked
   968  00FF84  6F00               	movwf	0,b	;volatile
   969                           
   970                           ;mcc_generated_files/system/src/pins.c: 67:     ANSELB = 0x0;
   971  00FF86  0E00               	movlw	0
   972  00FF88  6F08               	movwf	8,b	;volatile
   973                           
   974                           ;mcc_generated_files/system/src/pins.c: 68:     ANSELC = 0x0;
   975  00FF8A  0E00               	movlw	0
   976  00FF8C  6F10               	movwf	16,b	;volatile
   977                           
   978                           ;mcc_generated_files/system/src/pins.c: 73:     WPUA = 0x0;
   979  00FF8E  0E00               	movlw	0
   980  00FF90  6F01               	movwf	1,b	;volatile
   981                           
   982                           ;mcc_generated_files/system/src/pins.c: 74:     WPUB = 0x0;
   983  00FF92  0E00               	movlw	0
   984  00FF94  6F09               	movwf	9,b	;volatile
   985                           
   986                           ;mcc_generated_files/system/src/pins.c: 75:     WPUC = 0x0;
   987  00FF96  0E00               	movlw	0
   988  00FF98  6F11               	movwf	17,b	;volatile
   989                           
   990                           ;mcc_generated_files/system/src/pins.c: 80:     ODCONA = 0x0;
   991  00FF9A  0E00               	movlw	0
   992  00FF9C  6F02               	movwf	2,b	;volatile
   993                           
   994                           ;mcc_generated_files/system/src/pins.c: 81:     ODCONB = 0x0;
   995  00FF9E  0E00               	movlw	0
   996  00FFA0  6F0A               	movwf	10,b	;volatile
   997                           
   998                           ;mcc_generated_files/system/src/pins.c: 82:     ODCONC = 0x0;
   999  00FFA2  0E00               	movlw	0
  1000  00FFA4  6F12               	movwf	18,b	;volatile
  1001                           
  1002                           ;mcc_generated_files/system/src/pins.c: 87:     SLRCONA = 0x37;
  1003  00FFA6  0E37               	movlw	55
  1004  00FFA8  6F03               	movwf	3,b	;volatile
  1005                           
  1006                           ;mcc_generated_files/system/src/pins.c: 88:     SLRCONB = 0xF0;
  1007  00FFAA  0EF0               	movlw	240
  1008  00FFAC  6F0B               	movwf	11,b	;volatile
  1009  00FFAE                     
  1010                           ; BSR set to: 4
  1011                           ;mcc_generated_files/system/src/pins.c: 89:     SLRCONC = 0xFF;
  1012  00FFAE  6913               	setf	19,b	;volatile
  1013                           
  1014                           ;mcc_generated_files/system/src/pins.c: 94:     INLVLA = 0x3F;
  1015  00FFB0  0E3F               	movlw	63
  1016  00FFB2  6F04               	movwf	4,b	;volatile
  1017                           
  1018                           ;mcc_generated_files/system/src/pins.c: 95:     INLVLB = 0xF0;
  1019  00FFB4  0EF0               	movlw	240
  1020  00FFB6  6F0C               	movwf	12,b	;volatile
  1021  00FFB8                     
  1022                           ; BSR set to: 4
  1023                           ;mcc_generated_files/system/src/pins.c: 96:     INLVLC = 0xFF;
  1024  00FFB8  6914               	setf	20,b	;volatile
  1025                           
  1026                           ;mcc_generated_files/system/src/pins.c: 100:     PWM2ERSPPS = 0x11;
  1027  00FFBA  0E11               	movlw	17
  1028  00FFBC  0102               	movlb	2	; () banked
  1029  00FFBE  6F52               	movwf	82,b	;volatile
  1030                           
  1031                           ;mcc_generated_files/system/src/pins.c: 101:     CLCIN0PPS = 0x2;
  1032  00FFC0  0E02               	movlw	2
  1033  00FFC2  6F61               	movwf	97,b	;volatile
  1034                           
  1035                           ;mcc_generated_files/system/src/pins.c: 102:     PWMIN0PPS = 0x15;
  1036  00FFC4  0E15               	movlw	21
  1037  00FFC6  6F57               	movwf	87,b	;volatile
  1038                           
  1039                           ;mcc_generated_files/system/src/pins.c: 103:     PWMIN1PPS = 0x13;
  1040  00FFC8  0E13               	movlw	19
  1041  00FFCA  6F58               	movwf	88,b	;volatile
  1042                           
  1043                           ;mcc_generated_files/system/src/pins.c: 104:     PWM1ERSPPS = 0x5;
  1044  00FFCC  0E05               	movlw	5
  1045  00FFCE  6F51               	movwf	81,b	;volatile
  1046                           
  1047                           ;mcc_generated_files/system/src/pins.c: 105:     RC1PPS = 0x01;
  1048  00FFD0  0E01               	movlw	1
  1049  00FFD2  6F12               	movwf	18,b	;volatile
  1050                           
  1051                           ;mcc_generated_files/system/src/pins.c: 110:     IOCAP = 0x0;
  1052  00FFD4  0E00               	movlw	0
  1053  00FFD6  0104               	movlb	4	; () banked
  1054  00FFD8  6F05               	movwf	5,b	;volatile
  1055                           
  1056                           ;mcc_generated_files/system/src/pins.c: 111:     IOCAN = 0x0;
  1057  00FFDA  0E00               	movlw	0
  1058  00FFDC  6F06               	movwf	6,b	;volatile
  1059                           
  1060                           ;mcc_generated_files/system/src/pins.c: 112:     IOCAF = 0x0;
  1061  00FFDE  0E00               	movlw	0
  1062  00FFE0  6F07               	movwf	7,b	;volatile
  1063                           
  1064                           ;mcc_generated_files/system/src/pins.c: 113:     IOCBP = 0x0;
  1065  00FFE2  0E00               	movlw	0
  1066  00FFE4  6F0D               	movwf	13,b	;volatile
  1067                           
  1068                           ;mcc_generated_files/system/src/pins.c: 114:     IOCBN = 0x0;
  1069  00FFE6  0E00               	movlw	0
  1070  00FFE8  6F0E               	movwf	14,b	;volatile
  1071                           
  1072                           ;mcc_generated_files/system/src/pins.c: 115:     IOCBF = 0x0;
  1073  00FFEA  0E00               	movlw	0
  1074  00FFEC  6F0F               	movwf	15,b	;volatile
  1075                           
  1076                           ;mcc_generated_files/system/src/pins.c: 116:     IOCCP = 0x0;
  1077  00FFEE  0E00               	movlw	0
  1078  00FFF0  6F15               	movwf	21,b	;volatile
  1079                           
  1080                           ;mcc_generated_files/system/src/pins.c: 117:     IOCCN = 0x0;
  1081  00FFF2  0E00               	movlw	0
  1082  00FFF4  6F16               	movwf	22,b	;volatile
  1083                           
  1084                           ;mcc_generated_files/system/src/pins.c: 118:     IOCCF = 0x0;
  1085  00FFF6  0E00               	movlw	0
  1086  00FFF8  6F17               	movwf	23,b	;volatile
  1087  00FFFA                     
  1088                           ; BSR set to: 4
  1089  00FFFA  0012               	return		;funcret
  1090  00FFFC                     __end_of_PIN_MANAGER_Initialize:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _INTERRUPT_Initialize *****************
  1094 ;; Defined at:
  1095 ;;		line 65 in file "mcc_generated_files/system/src/interrupt.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1113 ;;Total ram usage:        0 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    1
  1116 ;; This function calls:
  1117 ;;		_INT0_SetInterruptHandler
  1118 ;;		_INT1_SetInterruptHandler
  1119 ;;		_INT2_SetInterruptHandler
  1120 ;; This function is called by:
  1121 ;;		_SYSTEM_Initialize
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text11
  1126  00FE58                     __ptext11:
  1127                           	callstack 0
  1128  00FE58                     _INTERRUPT_Initialize:
  1129                           	callstack 125
  1130  00FE58                     
  1131                           ;mcc_generated_files/system/src/interrupt.c: 68:     INTCON0bits.IPEN = 0;
  1132  00FE58  9AD6               	bcf	214,5,c	;volatile
  1133                           
  1134                           ;mcc_generated_files/system/src/interrupt.c: 72:     (PIR1bits.INT0IF = 0);
  1135  00FE5A  90B4               	bcf	180,0,c	;volatile
  1136                           
  1137                           ;mcc_generated_files/system/src/interrupt.c: 73:     (INTCON0bits.INT0EDG = 1);
  1138  00FE5C  80D6               	bsf	214,0,c	;volatile
  1139  00FE5E                     
  1140                           ;mcc_generated_files/system/src/interrupt.c: 75:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
  1141  00FE5E  0E00               	movlw	0
  1142  00FE60  6E13               	movwf	INT0_SetInterruptHandler@InterruptHandler^(0+1280),c
  1143  00FE62  0E00               	movlw	0
  1144  00FE64  6E14               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  1145  00FE66  ECBB  F07E         	call	_INT0_SetInterruptHandler	;wreg free
  1146  00FE6A                     
  1147                           ;mcc_generated_files/system/src/interrupt.c: 80:     (PIR6bits.INT1IF = 0);
  1148  00FE6A  90B9               	bcf	185,0,c	;volatile
  1149  00FE6C                     
  1150                           ;mcc_generated_files/system/src/interrupt.c: 81:     (INTCON0bits.INT1EDG = 1);
  1151  00FE6C  82D6               	bsf	214,1,c	;volatile
  1152                           
  1153                           ;mcc_generated_files/system/src/interrupt.c: 83:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
  1154  00FE6E  0E00               	movlw	0
  1155  00FE70  6E13               	movwf	INT1_SetInterruptHandler@InterruptHandler^(0+1280),c
  1156  00FE72  0E00               	movlw	0
  1157  00FE74  6E14               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  1158  00FE76  ECC0  F07E         	call	_INT1_SetInterruptHandler	;wreg free
  1159  00FE7A                     
  1160                           ;mcc_generated_files/system/src/interrupt.c: 88:     (PIR10bits.INT2IF = 0);
  1161  00FE7A  90BD               	bcf	189,0,c	;volatile
  1162  00FE7C                     
  1163                           ;mcc_generated_files/system/src/interrupt.c: 89:     (INTCON0bits.INT2EDG = 1);
  1164  00FE7C  84D6               	bsf	214,2,c	;volatile
  1165                           
  1166                           ;mcc_generated_files/system/src/interrupt.c: 91:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
  1167  00FE7E  0E00               	movlw	0
  1168  00FE80  6E13               	movwf	INT2_SetInterruptHandler@InterruptHandler^(0+1280),c
  1169  00FE82  0E00               	movlw	0
  1170  00FE84  6E14               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  1171  00FE86  ECC5  F07E         	call	_INT2_SetInterruptHandler	;wreg free
  1172  00FE8A  0012               	return		;funcret
  1173  00FE8C                     __end_of_INTERRUPT_Initialize:
  1174                           	callstack 0
  1175                           
  1176 ;; *************** function _INT2_SetInterruptHandler *****************
  1177 ;; Defined at:
  1178 ;;		line 167 in file "mcc_generated_files/system/src/interrupt.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1181 ;;		 -> INT2_DefaultInterruptHandler(1), 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1196 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1197 ;;Total ram usage:        2 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_INTERRUPT_Initialize
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text12
  1207  00FD8A                     __ptext12:
  1208                           	callstack 0
  1209  00FD8A                     _INT2_SetInterruptHandler:
  1210                           	callstack 125
  1211  00FD8A                     
  1212                           ;mcc_generated_files/system/src/interrupt.c: 168:     INT2_InterruptHandler = InterruptH
      +                          andler;
  1213  00FD8A  C513  F507         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  1214  00FD8E  C514  F508         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  1215  00FD92  0012               	return		;funcret
  1216  00FD94                     __end_of_INT2_SetInterruptHandler:
  1217                           	callstack 0
  1218                           
  1219 ;; *************** function _INT1_SetInterruptHandler *****************
  1220 ;; Defined at:
  1221 ;;		line 141 in file "mcc_generated_files/system/src/interrupt.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1224 ;;		 -> INT1_DefaultInterruptHandler(1), 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;		None
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, status,2, status,0
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1239 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1240 ;;Total ram usage:        2 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; This function calls:
  1243 ;;		Nothing
  1244 ;; This function is called by:
  1245 ;;		_INTERRUPT_Initialize
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text13
  1250  00FD80                     __ptext13:
  1251                           	callstack 0
  1252  00FD80                     _INT1_SetInterruptHandler:
  1253                           	callstack 125
  1254  00FD80                     
  1255                           ;mcc_generated_files/system/src/interrupt.c: 142:     INT1_InterruptHandler = InterruptH
      +                          andler;
  1256  00FD80  C513  F509         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  1257  00FD84  C514  F50A         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  1258  00FD88  0012               	return		;funcret
  1259  00FD8A                     __end_of_INT1_SetInterruptHandler:
  1260                           	callstack 0
  1261                           
  1262 ;; *************** function _INT0_SetInterruptHandler *****************
  1263 ;; Defined at:
  1264 ;;		line 115 in file "mcc_generated_files/system/src/interrupt.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1267 ;;		 -> INT0_DefaultInterruptHandler(1), 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, status,2, status,0
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1283 ;;Total ram usage:        2 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		_INTERRUPT_Initialize
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text14
  1293  00FD76                     __ptext14:
  1294                           	callstack 0
  1295  00FD76                     _INT0_SetInterruptHandler:
  1296                           	callstack 125
  1297  00FD76                     
  1298                           ;mcc_generated_files/system/src/interrupt.c: 116:     INT0_InterruptHandler = InterruptH
      +                          andler;
  1299  00FD76  C513  F50B         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  1300  00FD7A  C514  F50C         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  1301  00FD7E  0012               	return		;funcret
  1302  00FD80                     __end_of_INT0_SetInterruptHandler:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _CLOCK_Initialize *****************
  1306 ;; Defined at:
  1307 ;;		line 59 in file "mcc_generated_files/system/src/clock.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_SYSTEM_Initialize
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text15
  1335  00FE00                     __ptext15:
  1336                           	callstack 0
  1337  00FE00                     _CLOCK_Initialize:
  1338                           	callstack 126
  1339  00FE00                     
  1340                           ;mcc_generated_files/system/src/clock.c: 63:     OSCCON1 = 0x50;
  1341  00FE00  0E50               	movlw	80
  1342  00FE02  0100               	movlb	0	; () banked
  1343  00FE04  6FAD               	movwf	173,b	;volatile
  1344                           
  1345                           ;mcc_generated_files/system/src/clock.c: 65:     OSCCON2 = 0x70;
  1346  00FE06  0E70               	movlw	112
  1347  00FE08  6FAE               	movwf	174,b	;volatile
  1348                           
  1349                           ;mcc_generated_files/system/src/clock.c: 67:     OSCCON3 = 0x0;
  1350  00FE0A  0E00               	movlw	0
  1351  00FE0C  6FAF               	movwf	175,b	;volatile
  1352                           
  1353                           ;mcc_generated_files/system/src/clock.c: 69:     OSCEN = 0x0;
  1354  00FE0E  0E00               	movlw	0
  1355  00FE10  6FB3               	movwf	179,b	;volatile
  1356                           
  1357                           ;mcc_generated_files/system/src/clock.c: 71:     OSCFRQ = 0x2;
  1358  00FE12  0E02               	movlw	2
  1359  00FE14  6FB1               	movwf	177,b	;volatile
  1360                           
  1361                           ;mcc_generated_files/system/src/clock.c: 73:     OSCSTAT = 0x0;
  1362  00FE16  0E00               	movlw	0
  1363  00FE18  6FB2               	movwf	178,b	;volatile
  1364                           
  1365                           ;mcc_generated_files/system/src/clock.c: 75:     OSCTUNE = 0x0;
  1366  00FE1A  0E00               	movlw	0
  1367  00FE1C  6FB0               	movwf	176,b	;volatile
  1368                           
  1369                           ;mcc_generated_files/system/src/clock.c: 77:     ACTCON = 0x0;
  1370  00FE1E  0E00               	movlw	0
  1371  00FE20  6FAC               	movwf	172,b	;volatile
  1372  00FE22                     
  1373                           ; BSR set to: 0
  1374  00FE22  0012               	return		;funcret
  1375  00FE24                     __end_of_CLOCK_Initialize:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _CLC1_Initialize *****************
  1379 ;; Defined at:
  1380 ;;		line 67 in file "mcc_generated_files/clc/src/clc1.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21
  1394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_SYSTEM_Initialize
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text16
  1408  00FE24                     __ptext16:
  1409                           	callstack 0
  1410  00FE24                     _CLC1_Initialize:
  1411                           	callstack 126
  1412  00FE24                     
  1413                           ;mcc_generated_files/clc/src/clc1.c: 72:     CLCSELECT = 0x0;
  1414  00FE24  0E00               	movlw	0
  1415  00FE26  0100               	movlb	0	; () banked
  1416  00FE28  6FD5               	movwf	213,b	;volatile
  1417                           
  1418                           ;mcc_generated_files/clc/src/clc1.c: 74:     CLCnPOL = 0x0;
  1419  00FE2A  0E00               	movlw	0
  1420  00FE2C  6FD7               	movwf	215,b	;volatile
  1421                           
  1422                           ;mcc_generated_files/clc/src/clc1.c: 76:     CLCnSEL0 = 0x15;
  1423  00FE2E  0E15               	movlw	21
  1424  00FE30  6FD8               	movwf	216,b	;volatile
  1425                           
  1426                           ;mcc_generated_files/clc/src/clc1.c: 78:     CLCnSEL1 = 0x17;
  1427  00FE32  0E17               	movlw	23
  1428  00FE34  6FD9               	movwf	217,b	;volatile
  1429                           
  1430                           ;mcc_generated_files/clc/src/clc1.c: 80:     CLCnSEL2 = 0x0;
  1431  00FE36  0E00               	movlw	0
  1432  00FE38  6FDA               	movwf	218,b	;volatile
  1433                           
  1434                           ;mcc_generated_files/clc/src/clc1.c: 82:     CLCnSEL3 = 0x0;
  1435  00FE3A  0E00               	movlw	0
  1436  00FE3C  6FDB               	movwf	219,b	;volatile
  1437                           
  1438                           ;mcc_generated_files/clc/src/clc1.c: 84:     CLCnGLS0 = 0x2;
  1439  00FE3E  0E02               	movlw	2
  1440  00FE40  6FDC               	movwf	220,b	;volatile
  1441                           
  1442                           ;mcc_generated_files/clc/src/clc1.c: 86:     CLCnGLS1 = 0x8;
  1443  00FE42  0E08               	movlw	8
  1444  00FE44  6FDD               	movwf	221,b	;volatile
  1445                           
  1446                           ;mcc_generated_files/clc/src/clc1.c: 88:     CLCnGLS2 = 0x0;
  1447  00FE46  0E00               	movlw	0
  1448  00FE48  6FDE               	movwf	222,b	;volatile
  1449                           
  1450                           ;mcc_generated_files/clc/src/clc1.c: 90:     CLCnGLS3 = 0x0;
  1451  00FE4A  0E00               	movlw	0
  1452  00FE4C  6FDF               	movwf	223,b	;volatile
  1453                           
  1454                           ;mcc_generated_files/clc/src/clc1.c: 92:     CLCDATA = 0x0;
  1455  00FE4E  0E00               	movlw	0
  1456  00FE50  6FD4               	movwf	212,b	;volatile
  1457                           
  1458                           ;mcc_generated_files/clc/src/clc1.c: 94:     CLCnCON = 0x80;
  1459  00FE52  0E80               	movlw	128
  1460  00FE54  6FD6               	movwf	214,b	;volatile
  1461  00FE56                     
  1462                           ; BSR set to: 0
  1463  00FE56  0012               	return		;funcret
  1464  00FE58                     __end_of_CLC1_Initialize:
  1465                           	callstack 0
  1466  0000                     
  1467                           	psect	rparam
  1468  0000                     
  1469                           	psect	idloc
  1470                           
  1471                           ;Config register IDLOC0 @ 0x200000
  1472                           ;	unspecified, using default values
  1473  200000                     	org	2097152
  1474  200000  0FFF               	dw	4095
  1475                           
  1476                           ;Config register IDLOC1 @ 0x200002
  1477                           ;	unspecified, using default values
  1478  200002                     	org	2097154
  1479  200002  0FFF               	dw	4095
  1480                           
  1481                           ;Config register IDLOC2 @ 0x200004
  1482                           ;	unspecified, using default values
  1483  200004                     	org	2097156
  1484  200004  0FFF               	dw	4095
  1485                           
  1486                           ;Config register IDLOC3 @ 0x200006
  1487                           ;	unspecified, using default values
  1488  200006                     	org	2097158
  1489  200006  0FFF               	dw	4095
  1490                           
  1491                           ;Config register IDLOC4 @ 0x200008
  1492                           ;	unspecified, using default values
  1493  200008                     	org	2097160
  1494  200008  0FFF               	dw	4095
  1495                           
  1496                           ;Config register IDLOC5 @ 0x20000A
  1497                           ;	unspecified, using default values
  1498  20000A                     	org	2097162
  1499  20000A  0FFF               	dw	4095
  1500                           
  1501                           ;Config register IDLOC6 @ 0x20000C
  1502                           ;	unspecified, using default values
  1503  20000C                     	org	2097164
  1504  20000C  0FFF               	dw	4095
  1505                           
  1506                           ;Config register IDLOC7 @ 0x20000E
  1507                           ;	unspecified, using default values
  1508  20000E                     	org	2097166
  1509  20000E  0FFF               	dw	4095
  1510                           
  1511                           ;Config register IDLOC8 @ 0x200010
  1512                           ;	unspecified, using default values
  1513  200010                     	org	2097168
  1514  200010  0FFF               	dw	4095
  1515                           
  1516                           ;Config register IDLOC9 @ 0x200012
  1517                           ;	unspecified, using default values
  1518  200012                     	org	2097170
  1519  200012  0FFF               	dw	4095
  1520                           
  1521                           ;Config register IDLOC10 @ 0x200014
  1522                           ;	unspecified, using default values
  1523  200014                     	org	2097172
  1524  200014  0FFF               	dw	4095
  1525                           
  1526                           ;Config register IDLOC11 @ 0x200016
  1527                           ;	unspecified, using default values
  1528  200016                     	org	2097174
  1529  200016  0FFF               	dw	4095
  1530                           
  1531                           ;Config register IDLOC12 @ 0x200018
  1532                           ;	unspecified, using default values
  1533  200018                     	org	2097176
  1534  200018  0FFF               	dw	4095
  1535                           
  1536                           ;Config register IDLOC13 @ 0x20001A
  1537                           ;	unspecified, using default values
  1538  20001A                     	org	2097178
  1539  20001A  0FFF               	dw	4095
  1540                           
  1541                           ;Config register IDLOC14 @ 0x20001C
  1542                           ;	unspecified, using default values
  1543  20001C                     	org	2097180
  1544  20001C  0FFF               	dw	4095
  1545                           
  1546                           ;Config register IDLOC15 @ 0x20001E
  1547                           ;	unspecified, using default values
  1548  20001E                     	org	2097182
  1549  20001E  0FFF               	dw	4095
  1550                           
  1551                           	psect	config
  1552                           
  1553                           ;Config register CONFIG1 @ 0x300000
  1554                           ;	External Oscillator Selection
  1555                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  1556                           ;	Reset Oscillator Selection
  1557                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1558  300000                     	org	3145728
  1559  300000  FF                 	db	255
  1560                           
  1561                           ;Config register CONFIG2 @ 0x300001
  1562                           ;	Clock out Enable bit
  1563                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1564                           ;	PRLOCKED One-Way Set Enable bit
  1565                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1566                           ;	Clock Switch Enable bit
  1567                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1568                           ;	Fail-Safe Clock Monitor Enable bit
  1569                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1570                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
  1571                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
  1572                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
  1573                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
  1574  300001                     	org	3145729
  1575  300001  FF                 	db	255
  1576                           
  1577                           ;Config register CONFIG3 @ 0x300002
  1578                           ;	MCLR Enable bit
  1579                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1580                           ;	Power-up timer selection bits
  1581                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1582                           ;	Multi-vector enable bit
  1583                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  1584                           ;	IVTLOCK bit One-way set enable bit
  1585                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1586                           ;	Low Power BOR Enable bit
  1587                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1588                           ;	Brown-out Reset Enable bits
  1589                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1590  300002                     	org	3145730
  1591  300002  F7                 	db	247
  1592                           
  1593                           ;Config register CONFIG4 @ 0x300003
  1594                           ;	Brown-out Reset Voltage Selection bits
  1595                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1596                           ;	ZCD Disable bit
  1597                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1598                           ;	PPSLOCK bit One-Way Set Enable bit
  1599                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1600                           ;	Stack Full/Underflow Reset Enable bit
  1601                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1602                           ;	Low Voltage Programming Enable bit
  1603                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1604                           ;	Extended Instruction Set Enable bit
  1605                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1606  300003                     	org	3145731
  1607  300003  FF                 	db	255
  1608                           
  1609                           ;Config register CONFIG5 @ 0x300004
  1610                           ;	WDT Period selection bits
  1611                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1612                           ;	WDT operating mode
  1613                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1614  300004                     	org	3145732
  1615  300004  9F                 	db	159
  1616                           
  1617                           ;Config register CONFIG6 @ 0x300005
  1618                           ;	WDT Window Select bits
  1619                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1620                           ;	WDT input clock selector
  1621                           ;	WDTCCS = SC, Software Control
  1622  300005                     	org	3145733
  1623  300005  FF                 	db	255
  1624                           
  1625                           ;Config register CONFIG7 @ 0x300006
  1626                           ;	Boot Block Size selection bits
  1627                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1628                           ;	Boot Block enable bit
  1629                           ;	BBEN = OFF, Boot block disabled
  1630                           ;	Storage Area Flash enable bit
  1631                           ;	SAFEN = OFF, SAF disabled
  1632                           ;	Background Debugger
  1633                           ;	DEBUG = OFF, Background Debugger disabled
  1634  300006                     	org	3145734
  1635  300006  FF                 	db	255
  1636                           
  1637                           ;Config register CONFIG8 @ 0x300007
  1638                           ;	Boot Block Write Protection bit
  1639                           ;	WRTB = OFF, Boot Block not Write protected
  1640                           ;	Configuration Register Write Protection bit
  1641                           ;	WRTC = OFF, Configuration registers not Write protected
  1642                           ;	Data EEPROM Write Protection bit
  1643                           ;	WRTD = OFF, Data EEPROM not Write protected
  1644                           ;	SAF Write protection bit
  1645                           ;	WRTSAF = OFF, SAF not Write Protected
  1646                           ;	Application Block write protection bit
  1647                           ;	WRTAPP = OFF, Application Block not write protected
  1648  300007                     	org	3145735
  1649  300007  FF                 	db	255
  1650                           
  1651                           ;Config register CONFIG9 @ 0x300008
  1652                           ;	PFM and Data EEPROM Code Protection bit
  1653                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1654  300008                     	org	3145736
  1655  300008  FF                 	db	255
  1656                           
  1657                           ; Padding undefined space
  1658  300009                     	org	3145737
  1659  300009  FF                 	db	255
  1660                           tosu	equ	0x4FF
  1661                           tosh	equ	0x4FE
  1662                           tosl	equ	0x4FD
  1663                           stkptr	equ	0x4FC
  1664                           pclatu	equ	0x4FB
  1665                           pclath	equ	0x4FA
  1666                           pcl	equ	0x4F9
  1667                           tblptru	equ	0x4F8
  1668                           tblptrh	equ	0x4F7
  1669                           tblptrl	equ	0x4F6
  1670                           tablat	equ	0x4F5
  1671                           prodh	equ	0x4F4
  1672                           prodl	equ	0x4F3
  1673                           indf0	equ	0x4EF
  1674                           postinc0	equ	0x4EE
  1675                           postdec0	equ	0x4ED
  1676                           preinc0	equ	0x4EC
  1677                           plusw0	equ	0x4EB
  1678                           fsr0h	equ	0x4EA
  1679                           fsr0l	equ	0x4E9
  1680                           wreg	equ	0x4E8
  1681                           indf1	equ	0x4E7
  1682                           postinc1	equ	0x4E6
  1683                           postdec1	equ	0x4E5
  1684                           preinc1	equ	0x4E4
  1685                           plusw1	equ	0x4E3
  1686                           fsr1h	equ	0x4E2
  1687                           fsr1l	equ	0x4E1
  1688                           bsr	equ	0x4E0
  1689                           indf2	equ	0x4DF
  1690                           postinc2	equ	0x4DE
  1691                           postdec2	equ	0x4DD
  1692                           preinc2	equ	0x4DC
  1693                           plusw2	equ	0x4DB
  1694                           fsr2h	equ	0x4DA
  1695                           fsr2l	equ	0x4D9
  1696                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2      20
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0

Pointer List with Targets:

    PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Period_DefaultInterruptHandler(), 

    PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(), 

    PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(), 

    PWM1_16BIT_Period_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Period_DefaultInterruptHandler(), Absolute function(), 

    PWM1_16BIT_Slice1Output2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(), Absolute function(), 

    PWM1_16BIT_Slice1Output1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), INT2_DefaultInterruptHandler(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), INT1_DefaultInterruptHandler(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), INT0_DefaultInterruptHandler(), 

    PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Period_DefaultInterruptHandler(), 

    PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Slice1Output2_DefaultInterruptHandler(), 

    PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Slice1Output1_DefaultInterruptHandler(), 

    PWM2_16BIT_Period_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), PWM2_16BIT_Period_DefaultInterruptHandler(), 

    PWM2_16BIT_Slice1Output2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), PWM2_16BIT_Slice1Output2_DefaultInterruptHandler(), 

    PWM2_16BIT_Slice1Output1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), PWM2_16BIT_Slice1Output1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _PWM2_16BIT_Initialize->_PWM2_16BIT_Period_SetInterruptHandler
    _PWM2_16BIT_Initialize->_PWM2_16BIT_Slice1Output1_SetInterruptHandler
    _PWM2_16BIT_Initialize->_PWM2_16BIT_Slice1Output2_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Period_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Slice1Output1_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Slice1Output2_SetInterruptHandler
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     882
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     882
                    _CLC1_Initialize
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
              _PWM1_16BIT_Initialize
              _PWM2_16BIT_Initialize
 ---------------------------------------------------------------------------------
 (2) _PWM2_16BIT_Initialize                                0     0      0     294
_PWM2_16BIT_Period_SetInterruptHandl
_PWM2_16BIT_Slice1Output1_SetInterru
_PWM2_16BIT_Slice1Output2_SetInterru
 ---------------------------------------------------------------------------------
 (3) _PWM2_16BIT_Slice1Output2_SetInterruptHandler         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM2_16BIT_Slice1Output1_SetInterruptHandler         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM2_16BIT_Period_SetInterruptHandler                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_16BIT_Initialize                                0     0      0     294
_PWM1_16BIT_Period_SetInterruptHandl
_PWM1_16BIT_Slice1Output1_SetInterru
_PWM1_16BIT_Slice1Output2_SetInterru
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Slice1Output2_SetInterruptHandler         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Slice1Output1_SetInterruptHandler         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Period_SetInterruptHandler                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLC1_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _PWM1_16BIT_Initialize
       _PWM1_16BIT_Period_SetInterruptHandler
       _PWM1_16BIT_Slice1Output1_SetInterruptHandler
       _PWM1_16BIT_Slice1Output2_SetInterruptHandler
     _PWM2_16BIT_Initialize
       _PWM2_16BIT_Period_SetInterruptHandler
       _PWM2_16BIT_Slice1Output1_SetInterruptHandler
       _PWM2_16BIT_Slice1Output2_SetInterruptHandler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2      14       1       21.1%
STACK                0      0       0       2        0.0%
DATA                 0      0      14       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BANK20             100      0       0      34        0.0%
BANK21             100      0       0      35        0.0%
ABS                  0      0      14      36        0.0%
BITBANK20          100      0       0      37        0.0%
BITBANK21          100      0       0      38        0.0%
BIGRAM            10FF      0       0      39        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Apr 12 15:44:28 2021

                                                          l51 FE22  
                                                          l29 FE56  
                                                         l126 FFFA  
                                                         l223 FDC4  
                                                         l226 FDCE  
                                                         l309 FD92  
                                                         l421 FDA6  
                                                         l229 FDBA  
                                                         l190 FF66  
                                                         l327 FDFE  
                                                         l424 FDB0  
                                                         l273 FE8A  
                                                         l283 FD7E  
                                                         l427 FD9C  
                                                         l443 FDDE  
                                                         l444 FDDE  
                                                         l296 FD88  
                                                         l388 FEF8  
                                  ??_INT0_SetInterruptHandler 0515  
                                                        l1140 FE24  
                                                        l1142 FE00  
                                                        l1144 FF68  
                                                        l1400 FEE8  
                                                        l1146 FFAE  
                                                        l1402 FEF4  
                                                        l1330 FDBC  
                                                        l1410 FDF6  
                                                        l1340 FD8A  
                                                        l1148 FFB8  
                                                        l1332 FDC6  
                                                        l1412 FDFA  
                                                        l1404 FDE6  
                                                        l1342 FD9E  
                                                        l1334 FDB2  
                                                        l1350 FF32  
                                                        l1406 FDEA  
                                                        l1414 FDDA  
                                                        l1336 FD76  
                                                        l1344 FDA8  
                                                        l1360 FF3C  
                                                        l1352 FF34  
                                                        l1408 FDEE  
                                                        l1338 FD80  
                                                        l1370 FE58  
                                                        l1346 FD94  
                                                        l1362 FF3E  
                                                        l1354 FF36  
                                                        l1380 FE7C  
                                                        l1372 FE5E  
                                                        l1364 FF4A  
                                                        l1356 FF38  
                                                        l1348 FEFA  
                                                        l1374 FE6A  
                                                        l1390 FECA  
                                                        l1382 FE8C  
                                                        l1366 FF56  
                                                        l1358 FF3A  
                                                        l1376 FE6C  
                                                        l1392 FECC  
                                                        l1384 FEC4  
                                                        l1368 FF62  
                                                        l1378 FE7A  
                                                        l1394 FECE  
                                                        l1386 FEC6  
                                                        l1396 FED0  
                                                        l1388 FEC8  
                                                        l1398 FEDC  
                                                        _LATA 0004BE  
                                                        _LATB 0004BF  
                                                        _LATC 0004C0  
                                                        _WPUA 000401  
                                                        _WPUB 000409  
                                                        _WPUC 000411  
                                                        _main FDDA  
                           __size_of_INT2_SetInterruptHandler 000A  
                                   ?_INT2_SetInterruptHandler 0513  
                                                        start FFFC  
                                                ___param_bank 000000  
                                                       ?_main 0513  
                                                       _IOCAF 000407  
                                                       _IOCBF 00040F  
                                                       _IOCCF 000417  
                                                       _IOCAN 000406  
                                                       _IOCAP 000405  
                                                       _IOCBN 00040E  
                                                       _IOCBP 00040D  
                                                       _IOCCN 000416  
                                                       _IOCCP 000415  
                                      ?_PWM1_16BIT_Initialize 0513  
                                                       _OSCEN 0000B3  
                                                       _TRISA 0004C6  
                                                       _TRISB 0004C7  
                                                       _TRISC 0004C8  
            _PWM1_16BIT_Slice1Output1_DefaultInterruptHandler 000000  
            _PWM2_16BIT_Slice1Output1_DefaultInterruptHandler 000000  
                                    _INT1_SetInterruptHandler FD80  
                                       _PWM2_16BIT_Initialize FEFA  
                                             __initialization FDD0  
                                                __end_of_main FDE6  
                                                      ??_main 0515  
                                               __activetblptr 000002  
               __end_of_PWM1_16BIT_Period_SetInterruptHandler FD9E  
              __size_of_PWM1_16BIT_Period_SetInterruptHandler 000A  
               __end_of_PWM2_16BIT_Period_SetInterruptHandler FDBC  
              __size_of_PWM2_16BIT_Period_SetInterruptHandler 000A  
                     ??_PWM1_16BIT_Period_SetInterruptHandler 0515  
                     ??_PWM2_16BIT_Period_SetInterruptHandler 0515  
                      ?_PWM1_16BIT_Period_SetInterruptHandler 0513  
                      ?_PWM2_16BIT_Period_SetInterruptHandler 0513  
                       _PWM1_16BIT_Period_SetInterruptHandler FD94  
                       _PWM2_16BIT_Period_SetInterruptHandler FDB2  
                                                      _ACTCON 0000AC  
                                                      _ANSELA 000400  
                                                      _ANSELB 000408  
                                                      _ANSELC 000410  
                                                      _RC1PPS 000212  
                                                      _ODCONA 000402  
                                                      _ODCONB 00040A  
                                                      _ODCONC 000412  
                                                      _INLVLA 000404  
                                                      _INLVLB 00040C  
                                                      _INLVLC 000414  
                                                      _OSCFRQ 0000B1  
                                           ?_CLOCK_Initialize 0513  
                                _INT2_DefaultInterruptHandler 000000  
                                          ??_CLOCK_Initialize 0513  
                                                      tblptru 0004F8  
       PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler 0513  
PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler 0513  
PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler 0513  
                    INT2_SetInterruptHandler@InterruptHandler 0513  
                    INT1_SetInterruptHandler@InterruptHandler 0513  
                    INT0_SetInterruptHandler@InterruptHandler 0513  
       PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler 0513  
PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler 0513  
PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler 0513  
                                             _CLC1_Initialize FE24  
                               __size_of_INTERRUPT_Initialize 0034  
                                           _SYSTEM_Initialize FDE6  
                                                  __accesstop 0560  
                                     __end_of__initialization FDD0  
                                          ?_SYSTEM_Initialize 0513  
                                      ?_PWM2_16BIT_Initialize 0513  
                                               ___rparam_used 000001  
                                              __pcstackCOMRAM 0513  
                                         ??_SYSTEM_Initialize 0515  
                            __end_of_INT2_SetInterruptHandler FD94  
                                   __end_of_SYSTEM_Initialize FE00  
                                       _INT0_InterruptHandler 050B  
                                                  __pnvCOMRAM 0501  
                                     ??_PWM1_16BIT_Initialize 0515  
                                                     _CLCDATA 0000D4  
                                                     _CLCnCON 0000D6  
                                                     _CLCnPOL 0000D7  
                                     __end_of_CLC1_Initialize FE58  
                                  ??_INT1_SetInterruptHandler 0515  
                                                     _OSCCON1 0000AD  
                                                     _OSCCON2 0000AE  
                                                     _OSCCON3 0000AF  
                                                     _OSCSTAT 0000B2  
                                                     _OSCTUNE 0000B0  
                                                     _PWM1CLK 000461  
                                                     _PWM1GIE 000468  
                                                     _PWM2CLK 000470  
                                                     _PWM1CON 000469  
                                                     _PWM2GIE 000477  
                                                     _PWM2CON 000478  
                                                     _PWM1GIR 000467  
                                                     _PWM2GIR 000476  
                                                     _PWM1ERS 000460  
                                                     _PWM1LDS 000462  
                                                     _PWM2ERS 00046F  
                                                     _PWM2LDS 000471  
                                                     _PWM1PRH 000464  
                                                     _PWM1PRL 000463  
                                                     _PWM2PRH 000473  
                                                     _PWM2PRL 000472  
                                                     _SLRCONA 000403  
                                                     _SLRCONB 00040B  
                                                     _SLRCONC 000413  
                           __size_of_INT0_SetInterruptHandler 000A  
                                   ?_INT0_SetInterruptHandler 0513  
                                                   _CLCIN0PPS 000261  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                                   _CLCSELECT 0000D5  
                                                     __pcinit FDD0  
                                                     __ramtop 1600  
                                                     __ptext0 FDDA  
                                                     __ptext1 FDE6  
                                                     __ptext2 FEFA  
                                                     __ptext3 FDC6  
                                                     __ptext4 FDBC  
                                                     __ptext5 FDB2  
                                                     __ptext6 FE8C  
                                                     __ptext7 FDA8  
                                                     __ptext8 FD9E  
                                                     __ptext9 FD94  
        __end_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler FDA8  
       __size_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler 000A  
        __end_of_PWM2_16BIT_Slice1Output1_SetInterruptHandler FDC6  
       __size_of_PWM2_16BIT_Slice1Output1_SetInterruptHandler 000A  
              ??_PWM1_16BIT_Slice1Output1_SetInterruptHandler 0515  
              ??_PWM2_16BIT_Slice1Output1_SetInterruptHandler 0515  
               ?_PWM1_16BIT_Slice1Output1_SetInterruptHandler 0513  
               ?_PWM2_16BIT_Slice1Output1_SetInterruptHandler 0513  
                _PWM1_16BIT_Slice1Output1_SetInterruptHandler FD9E  
                _PWM2_16BIT_Slice1Output1_SetInterruptHandler FDBC  
                                    ??_PIN_MANAGER_Initialize 0513  
                                  __size_of_SYSTEM_Initialize 001A  
                                        end_of_initialization FDD0  
            _PWM1_16BIT_Slice1Output2_DefaultInterruptHandler 000000  
            _PWM2_16BIT_Slice1Output2_DefaultInterruptHandler 000000  
                                    _INT2_SetInterruptHandler FD8A  
                                                   _PIR10bits 0004BD  
                                               __Lmediumconst 0000  
                                                   _PWM1S1CFG 00046A  
                                                   _PWM1S1P1H 00046C  
                                                   _PWM1S1P2H 00046E  
                                                   _PWM1S1P1L 00046B  
                                                   _PWM1S1P2L 00046D  
                                                   _PWM2S1CFG 000479  
                                                   _PWM2S1P1H 00047B  
                                                   _PWM2S1P2H 00047D  
                                                   _PWM2S1P1L 00047A  
                                                   _PWM2S1P2L 00047C  
                                                   _PWM1PIPOS 000466  
                                                   _PWM2PIPOS 000475  
                                                   _PWMIN0PPS 000257  
                                                   _PWMIN1PPS 000258  
                                       _INT1_InterruptHandler 0509  
                                            ?_CLC1_Initialize 0513  
                                     ??_PWM2_16BIT_Initialize 0515  
                                   __size_of_CLOCK_Initialize 0024  
                                __end_of_INTERRUPT_Initialize FE8C  
                                _INT0_DefaultInterruptHandler 000000  
                                         start_initialization FDD0  
                             __size_of_PIN_MANAGER_Initialize 0094  
                                                 _CLCDATAbits 0000D4  
                              __size_of_PWM1_16BIT_Initialize 006E  
                               __end_of_PWM1_16BIT_Initialize FEFA  
                            __end_of_INT0_SetInterruptHandler FD80  
                                       _INT2_InterruptHandler 0507  
                                      _PIN_MANAGER_Initialize FF68  
                                  ??_INT2_SetInterruptHandler 0515  
                                                    _CLCnGLS0 0000DC  
                                                    _CLCnGLS1 0000DD  
                                                    _CLCnGLS2 0000DE  
                                                    _CLCnGLS3 0000DF  
                                                    _CLCnSEL0 0000D8  
                                                    _CLCnSEL1 0000D9  
                                                    _CLCnSEL2 0000DA  
                                                    _CLCnSEL3 0000DB  
                                        _INTERRUPT_Initialize FE58  
                   _PWM1_16BIT_Period_DefaultInterruptHandler 000000  
                   _PWM2_16BIT_Period_DefaultInterruptHandler 000000  
                                            _CLOCK_Initialize FE00  
                           __size_of_INT1_SetInterruptHandler 000A  
                                   ?_INT1_SetInterruptHandler 0513  
                          _PWM2_16BIT_Period_InterruptHandler 050D  
                                                    _PIE4bits 0004AC  
                                                    _PIE5bits 0004AD  
                                                    _PIR1bits 0004B4  
                                                    _PIR4bits 0004B7  
                                                    _PIR5bits 0004B8  
                                                    _PIR6bits 0004B9  
                                                    _PWM1CPRE 000465  
                                                    _PWM2CPRE 000474  
        __end_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler FDB2  
       __size_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler 000A  
        __end_of_PWM2_16BIT_Slice1Output2_SetInterruptHandler FDD0  
       __size_of_PWM2_16BIT_Slice1Output2_SetInterruptHandler 000A  
              ??_PWM1_16BIT_Slice1Output2_SetInterruptHandler 0515  
              ??_PWM2_16BIT_Slice1Output2_SetInterruptHandler 0515  
               ?_PWM1_16BIT_Slice1Output2_SetInterruptHandler 0513  
               ?_PWM2_16BIT_Slice1Output2_SetInterruptHandler 0513  
                _PWM1_16BIT_Slice1Output2_SetInterruptHandler FDA8  
                _PWM2_16BIT_Slice1Output2_SetInterruptHandler FDC6  
                                                 _INTCON0bits 0004D6  
                   _PWM2_16BIT_Slice1Output1_InterruptHandler 0511  
                   _PWM1_16BIT_Slice1Output1_InterruptHandler 0505  
                                       ?_INTERRUPT_Initialize 0513  
                                    _INT0_SetInterruptHandler FD76  
                              __size_of_PWM2_16BIT_Initialize 006E  
                               __end_of_PWM2_16BIT_Initialize FF68  
                                                    __Hrparam 0000  
                                                    __Lrparam 0000  
                                                    __ptext10 FF68  
                                                    __ptext11 FE58  
                                                    __ptext12 FD8A  
                                                    __ptext13 FD80  
                                                    __ptext14 FD76  
                                                    __ptext15 FE00  
                                                    __ptext16 FE24  
                                    __size_of_CLC1_Initialize 0034  
                                               __size_of_main 000C  
                          _PWM1_16BIT_Period_InterruptHandler 0501  
                                _INT1_DefaultInterruptHandler 000000  
                                                 _PWM1GIEbits 000468  
                                                 _PWM1CONbits 000469  
                                                 _PWM2GIEbits 000477  
                                                 _PWM2CONbits 000478  
                                                 _PWM1GIRbits 000467  
                                                 _PWM2GIRbits 000476  
                                      ??_INTERRUPT_Initialize 0515  
                                     ?_PIN_MANAGER_Initialize 0513  
                   _PWM2_16BIT_Slice1Output2_InterruptHandler 050F  
                   _PWM1_16BIT_Slice1Output2_InterruptHandler 0503  
                                                  _PWM1ERSPPS 000251  
                                                  _PWM2ERSPPS 000252  
                                    __end_of_CLOCK_Initialize FE24  
                                       _PWM1_16BIT_Initialize FE8C  
                            __end_of_INT1_SetInterruptHandler FD8A  
                              __end_of_PIN_MANAGER_Initialize FFFC  
                                           ??_CLC1_Initialize 0513  
